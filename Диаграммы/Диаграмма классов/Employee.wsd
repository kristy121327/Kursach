@startuml

hide empty methods
hide empty members

 
class DatabaseManager
{
 bool openDatabase()
 void closeDatabase()
 QSqlDatabase getDatabase()
 bool createUsersTable()
 bool insertInitialData()
 QList<QString> getEmployeeNamesByRoles()
 int getUserIdFromFullName()
 int getUserIdFromLogin()
 mutable QSqlDatabase db
}

class WorksDataManager
{
 bool openDatabase(const QString &path)
 void closeDatabase()
 bool createTable()
 bool insertSampleData()
 QList<QString> getAllWorkNames()
 QList<QVariantList> getWorksForUser()
 QList<QString> getUserWorkNames()
 bool updateProjectStatus()
 bool updateProject()
 QSqlDatabase m_db
 DatabaseManager db

}

class EmployeeMainWindow
{
  void on_exit_clicked()
  void on_newworkButton_clicked()
  void on_accountButton_clicked()
  QString m_login
}

class ConfirmWork
{
  void on_backButton_clicked()
  void on_confirmButton_clicked()
  QString m_login
}

class StaffProfil
{
  void setData()
  void on_backButton_clicked()
  QString m_login;
}

class TeacherProfil
{
  void on_backButton_clicked()
  QString m_login
}

class NewWorks
{
  void populateWorksTableForUser()
  void on_backButton_clicked()
  void on_confirmButton_clicked()
  QString m_login
}



EmployeeMainWindow --> StaffProfil
EmployeeMainWindow --> TeacherProfil
EmployeeMainWindow --> NewWorks

NewWorks --> ConfirmWork

WorksDataManager --> DatabaseManager

ConfirmWork --> WorksDataManager
EmployeeMainWindow --> DatabaseManager
NewWorks --> WorksDataManager
NewWorks --> DatabaseManager



@enduml